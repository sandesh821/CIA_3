{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "functionAppName": {
      "type": "string",
      "minLength": 2,
      "metadata": {
        "description": "Specify the name of the function application"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specify the location for the function application resources"
      }
    },
     "linuxFxVersion": {
      "type": "string",
      "defaultValue": "PYTHON|3.8",
      "metadata": {
        "description": "The Runtime stack of current web app"
      }
    },
    "runtimeStack": {
      "type": "string",
      "defaultValue": "python",
      "allowedValues": [
        "powershell",
        "dotnet",
        "node",
        "java",
        "python"
      ],
      "metadata": {
        "description": "Pick the language runtime that you want enabled"
      }
    },

    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
      "resourceGroupName": {
       "type": "string",
      "defaultValue": "[resourceGroup().name]",
       "metadata": {
      "description": "The name of the resource group"
      }
    },
    "subscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The ID of the subscription"
      }
    },
    "amlworkspaceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AML workspace associated"
      }
    },
    "amlstorageaccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AML storageaccountName associated"
      }
    }

  },
   "variables": {
    "hostingPlanName": "[concat(parameters('functionAppName'),'-asp')]",
    "applicationInsightsName": "[concat(parameters('functionAppName'),'-ai')]",
    "storageAccountName": "[concat('fapp', uniquestring(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "B1"
      },
        "kind": "linux",
      "properties": {
        "reserved": true,
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "tags": {
        "[format('hidden-link:{0}', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
      },
      "properties": {
        "Application_Type": "web"
      },
      "kind": "web"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux,container",
      "sku": {
        "name": "B1"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "httpsOnly": true,
        "ftpsState": "FtpsOnly",
        "reserved": true,
        "siteConfig": {
         "acrUseManagedIdentityCreds": true,
         "linuxFxVersion": "[parameters('linuxFxVersion')]",
          "appSettings": [
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[parameters('runtimeStack')]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components',variables('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2022-09-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "RESOURCE_GROUP_NAME",
               "value": "[parameters('resourceGroupName')]"
            },
            {
              "name": "SUBSCRIPTION_ID",
               "value": "[parameters('subscriptionId')]"
            },
            {
              "name": "AML_WORKSPACE_NAME",
               "value": "[parameters('amlworkspaceName')]"
            },
            {
              "name": "AML_STORAGE_ACCOUNT",
               "value": "[parameters('amlstorageaccountName')]"
            }
          ]
        },
        "name": "[parameters('functionAppName')]",
        "clientAffinityEnabled": false,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      }
    }
  ]
}